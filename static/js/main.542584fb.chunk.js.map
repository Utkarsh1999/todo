{"version":3,"sources":["features/list/reducer.js","features/list/List.js","App.js","app/store.js","serviceWorker.js","index.js","features/list/List.module.css"],"names":["reducer","createSlice","name","initialState","list","element","reducers","getElement","state","action","findIndex","ele","id","alert","addToTodo","payload","uuidv4","updatedAt","Date","toISOString","editToTodo","data","splice","deleteFromTodo","actions","selectList","selectElement","List","useState","sorter","changeSorting","modalType","changeModalType","modalOpen","changeModalState","useSelector","pendingList","filter","status","completedList","dispatch","useDispatch","columns","title","dataIndex","key","a","b","sortOrder","columnKey","order","ellipsis","render","row","moment","createdAt","format","dueDate","className","styles","list_row_child","onClick","window","confirm","onTableChange","pagination","filters","style","marginBottom","length","dataSource","onChange","isOpen","onRequestClose","display","onSubmit","event","preventDefault","form","document","forms","elements","value","description","priority","type","placeholder","required","defaultValue","App","persistConfig","version","storage","rootReducer","combineReducers","listReducer","persistedReducer","persistReducer","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","Boolean","location","hostname","match","ReactDOM","StrictMode","loading","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.542584fb.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const reducer = createSlice({\r\n  name: 'list',\r\n  initialState: {\r\n    list: [],\r\n    element: {},\r\n  },\r\n  reducers: {\r\n    getElement: (state, action) => {\r\n      const element = state.list.findIndex(ele => ele.id === action['payload']);\r\n      if (element !== -1) {\r\n        state.element = state.list[element];\r\n      } else {\r\n        alert('Invalid Id supplied!');\r\n      }\r\n    },\r\n    addToTodo: (state, action) => {\r\n      action.payload = {\r\n        ...action.payload,\r\n        id: uuidv4(),\r\n        updatedAt: new Date().toISOString()\r\n      };\r\n      state.list = [...state.list, action.payload];\r\n    },\r\n    editToTodo: (state, action) => {\r\n      const element = state.list.findIndex(ele => ele.id === action['payload'].id);\r\n      if (element !== -1) {\r\n        action['payload'].data = {\r\n          ...action['payload'].data,\r\n          id: state.list[element].id,\r\n          updatedAt: new Date().toISOString()\r\n        };\r\n        state.list.splice(element, 1);\r\n        state.list = [...state.list, action['payload'].data];\r\n      } else {\r\n        alert('Invalid Id supplied!');\r\n      }\r\n    },\r\n    deleteFromTodo: (state, action) => {\r\n      const element = state.list.findIndex(ele => ele.id === action['payload']);\r\n      if (element !== -1) {\r\n        state.list.splice(element, 1);\r\n      } else {\r\n        alert('Invalid Id supplied!');\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const { getElement, addToTodo, editToTodo, deleteFromTodo } = reducer.actions;\r\n\r\nexport const selectList = state => state.list.list;\r\nexport const selectElement = state => state.list.element;\r\n\r\nexport default reducer.reducer;\r\n","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  getElement,\r\n  addToTodo,\r\n  editToTodo,\r\n  deleteFromTodo,\r\n  selectList,\r\n  selectElement,\r\n} from './reducer';\r\nimport styles from './List.module.css';\r\nimport Modal from 'react-modal';\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport { Table } from 'antd';\r\nimport moment from 'moment';\r\n\r\nexport function List() {\r\n  const [sorter, changeSorting] = useState({});\r\n  const [modalType, changeModalType] = useState('add');\r\n  const [modalOpen, changeModalState] = useState(false);\r\n\r\n  const list = useSelector(selectList);\r\n  const pendingList = list && list.filter(ele => ele.status === 'pending');\r\n  const completedList = list && list.filter(ele => ele.status === 'completed');\r\n  const element = useSelector(selectElement);\r\n  const dispatch = useDispatch();\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Title',\r\n      dataIndex: 'title',\r\n      key: 'title',\r\n      sorter: (a, b) => a['title'] > b['title'] ? 1 : -1,\r\n      sortOrder: sorter.columnKey === 'title' && sorter.order,\r\n      ellipsis: true,\r\n    },\r\n    {\r\n      title: 'Priority',\r\n      dataIndex: 'priority',\r\n      key: 'priority',\r\n      sorter: (a, b) => a['priority'] > b['priority'] ? 1 : -1,\r\n      sortOrder: sorter.columnKey === 'priority' && sorter.order,\r\n      ellipsis: true,\r\n    },\r\n    {\r\n      title: 'Created On',\r\n      dataIndex: 'createdAt',\r\n      key: 'createdAt',\r\n      sorter: (a, b) => a['createdAt'] > b['createdAt'] ? 1 : -1,\r\n      sortOrder: sorter.columnKey === 'createdAt' && sorter.order,\r\n      ellipsis: true,\r\n      render: (row) => <div>{moment(row.createdAt).format('DD/MM/YYYY')}</div>\r\n    },\r\n    {\r\n      title: 'Due By',\r\n      dataIndex: 'dueDate',\r\n      key: 'dueDate',\r\n      sorter: (a, b) => a['dueDate'] > b['dueDate'] ? 1 : -1,\r\n      sortOrder: sorter.columnKey === 'dueDate' && sorter.order,\r\n      ellipsis: true,\r\n      render: (row) => <div>{moment(row.dueDate).format('DD/MM/YYYY')}</div>\r\n    },\r\n    {\r\n      title: 'Actions',\r\n      key: 'action',\r\n      render: (row) => <div>\r\n        <button className={styles.list_row_child} onClick={() => {\r\n          const payload = {\r\n            ...row,\r\n            status: (row.status) === 'pending' ? 'completed' : 'pending'\r\n          };\r\n          dispatch(editToTodo({\r\n            id: row.id,\r\n            data: payload\r\n          }));\r\n        }}>\r\n          {((row.status) === 'pending' ? 'Close' : 'Open') + ' Task'}\r\n        </button>\r\n        <button className={styles.list_row_child} onClick={() => {\r\n          dispatch(getElement(row.id));\r\n          changeModalType('edit');\r\n          changeModalState(true);\r\n        }}>Edit</button>\r\n        <button onClick={() => {\r\n          if (window.confirm(\"Are you sure you want to delete this listing?\")) {\r\n            dispatch(deleteFromTodo(row.id));\r\n          }\r\n        }}>Delete</button>\r\n      </div>\r\n    }\r\n  ];\r\n\r\n  function onTableChange(pagination, filters, sorter) {\r\n    changeSorting(sorter);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={styles.row}>\r\n        <button style={{ marginBottom: '20px' }} onClick={() => {\r\n          changeModalType('add');\r\n          changeModalState(true);\r\n        }}>Add Task</button>\r\n        <Tabs>\r\n          <TabList>\r\n            <Tab>All Tasks</Tab>\r\n            <Tab>Pending Tasks</Tab>\r\n            <Tab>Completed Tasks</Tab>\r\n          </TabList>\r\n\r\n          <TabPanel>\r\n            {(list && list.length > 0 && <Table columns={columns || []} dataSource={list || []} onChange={onTableChange}/>) || <p>No tasks created!</p>}\r\n          </TabPanel>\r\n          <TabPanel>\r\n            {(pendingList && pendingList.length > 0 && <Table columns={columns || []} dataSource={pendingList || []} onChange={onTableChange}/>) || <p>No pending tasks created!</p>}\r\n          </TabPanel>\r\n          <TabPanel>\r\n            {(completedList && completedList.length > 0 && <Table columns={columns || []} dataSource={completedList || []} onChange={onTableChange}/>) || <p>No completed tasks created!</p>}\r\n          </TabPanel>\r\n        </Tabs>\r\n      </div>\r\n\r\n      {modalOpen && <Modal isOpen={modalOpen} onRequestClose={() => {\r\n        changeModalType('add');\r\n        changeModalState(false);\r\n      }}>\r\n          <h4>{(modalType === 'add' ? 'Add' : 'Edit') + ' Task'}</h4>\r\n          <form name=\"modal\" style={{ display: 'flex' }} onSubmit={(event) => {\r\n            event.preventDefault();\r\n            const form = document.forms['modal'];\r\n            const payload = {\r\n              title: form.elements.title.value,\r\n              description: form.elements.description.value,\r\n              dueDate: form.elements.dueDate.value,\r\n              priority: form.elements.priority.value,\r\n              status: modalType === 'add' ? 'pending' : element.status,\r\n              createdAt: modalType === 'add' ? new Date().toISOString() : element.createdAt,\r\n            }\r\n            modalType === 'add'\r\n                ? dispatch(addToTodo(payload))\r\n                : dispatch(editToTodo({\r\n                  id: element && element.id,\r\n                  data: payload\r\n                }));\r\n            changeModalState(false);\r\n          }}>\r\n            <input type=\"text\" placeholder=\"enter title\" name=\"title\" required\r\n                   defaultValue={(modalType === 'edit' && element.title) || ''}/>\r\n            <textarea placeholder=\"enter description\" name=\"description\" required\r\n                      defaultValue={(modalType === 'edit' && element.description) || ''}/>\r\n            <input type=\"date\" name=\"dueDate\" required\r\n                   defaultValue={(modalType === 'edit' && element.dueDate) || ''}/>\r\n            <select defaultValue={modalType === 'edit' ? element.priority : \"None\"} name=\"priority\" required>\r\n              <option value=\"None\">None</option>\r\n              <option value=\"Low\">Low</option>\r\n              <option value=\"Medium\">Medium</option>\r\n              <option value=\"High\">High</option>\r\n            </select>\r\n            <button type=\"submit\">Submit</button>\r\n          </form>\r\n      </Modal>}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { List } from './features/list/List';\r\nimport './App.css';\r\nimport 'antd/dist/antd.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n          <h3>To Do Application built with React and Redux</h3>\r\n          <h6>Copyright Sambhav Jain (sambhavjain2612@gmail.com)</h6>\r\n          <List />\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore, combineReducers, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport listReducer from '../features/list/reducer';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  version: 1,\r\n  storage\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n  list: listReducer\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\r\n    }\r\n  })\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { store, persistor } from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n        <PersistGate loading={null} persistor={persistor}>\r\n            <App />\r\n        </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"List_row__2Q47d\",\"list_row\":\"List_list_row__1nx1o\",\"list_row_child\":\"List_list_row_child__EzcHG\"};"],"sourceRoot":""}